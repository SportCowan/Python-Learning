from IPython.display import clear_output

#important variables
pos = [""," "," "," "," "," "," "," "," "," "]
p2_letter = ""
p1_letter = ""
game = "not over"
winner = ""
num_moves = 0
last_mover = ""

#starts the game and gives players desired 'x' and 'o'
def start_game():
    clear_output()
    global pos
    global p2_letter
    global p1_letter
    global game
    global winner
    global num_moves
    pos = [""," "," "," "," "," "," "," "," "," "]
    p2_letter = ""
    p1_letter = input("Player 1, will you be 'x' or 'o'? ")
    game = "not over"
    winner = ""
    num_moves = 0
    while p1_letter.lower()!="o" and p1_letter.lower()!="x":
        p1_letter = input("that's not an 'x' or 'o'")
    if p1_letter.lower() == "x":
        p1_letter = "x"
        p2_letter = "o"
    else:
        p1_letter = "o"
        p2_letter = "x"
    print("Player 1: You are " + p1_letter)
    print("Player 2: You are " + p2_letter)
    print("You will be asked to input a number 1-9 to place your x's and o's.")
    print("Use the numpad as a reference for which number corresponds to which square")

#displays the game board
def display_game():
    global pos
    print("     |     |     ")
    print("  "+pos[7]+"  |  "+pos[8]+"  |  "+pos[9]+"  ")
    print("_____|_____|_____")
    print("     |     |     ")
    print("  "+pos[4]+"  |  "+pos[5]+"  |  "+pos[6]+"  ")
    print("_____|_____|_____")
    print("     |     |     ")
    print("  "+pos[1]+"  |  "+pos[2]+"  |  "+pos[3]+"  ")
    print("     |     |     ")
    
#checks if someone has won (retuns true if so)
def check_game_status():
    global pos
    global num_moves
    global last_mover
    if num_moves >= 3:
        if num_moves == 5:
            last_mover = ""
            return True
        elif pos[7] == pos[8] and pos[8] == pos[9] and pos[7] != " ":
            return True
        elif pos[7] == pos[4] and pos[4] == pos[1] and pos[7] != " ":
            return True
        elif pos[7] == pos[5] and pos[5] == pos[3] and pos[7] != " ":
            return True
        elif pos[9] == pos[5] and pos[5] == pos[1] and pos[9] != " ":
            return True
        elif pos[9] == pos[6] and pos[6] == pos[3] and pos[9] != " ":
            return True
        elif pos[4] == pos[5] and pos[5] == pos[6] and pos[5] != " ":
            return True
        elif pos[8] == pos[5] and pos[5] == pos[2] and pos[5] != " ":
            return True
        elif pos[1] == pos[2] and pos[2] == pos[3] and pos[3] != " ":
            return True
    return False

#bulk of the game where user makes moves
def make_moves():
    global num_moves
    global last_mover
    num_moves = 0
    while (not check_game_status()):
        num_moves+=1
        p1_input = ""
        p2_input = ""
        while (p1_input.isdigit() == False): 
            p1_input = input("Player 1: give a number 1-9 to place " + p1_letter + " ")
            while (int(p1_input) < 1 or int(p1_input) > 9):
                p1_input = input("Player 1: give a number 1-9 to place " + p1_letter + " ")
            while (pos[int(p1_input)] != " "):
                p1_input = input("That position is already taken. Pick another number ")
                while (p1_input.isdigit == False):
                    p1_input = input("That is not a digit ")
                    while(int(p1_input) >= 1 and int(p1_input) <= 9):
                        p1_input = input("That is not a valid number. Enter a digit 1-9 ")
        pos[int(p1_input)] = p1_letter
        clear_output()
        display_game()
        last_mover = p1_letter
        if check_game_status():
            break
        while (p2_input.isdigit() == False): 
            p2_input = input("Player 2: give a number 1-9 to place " + p2_letter + " ")
            while (int(p2_input) < 1 or int(p2_input) > 9):
                p2_input = input("Player 2: give a number 1-9 to place " + p2_letter + " ")
            while (pos[int(p2_input)] != " "):
                p2_input = input("That position is already taken. Pick another number ")
                while (p2_input.isdigit == False):
                    p2_input = input("That is not a digit ")
                    while(int(p2_input) >= 1 and int(p2_input) <= 9):
                        p2_input = input("That is not a valid number. Enter a digit 1-9 ")
        pos[int(p2_input)] = p2_letter
        clear_output()
        display_game()
        last_mover = p2_letter
        
#ends the game and restarts if the user requests so
def end_game():
    if last_mover == "":
        print("The match was a draw")
    else:
        if last_mover == p1_letter:
            winner = "Player 1"
        else:
            winner = "Player 2"
        print("Congratulations " + winner +"! You have won!")

#runs the whole game
def play_game():
    start_game()
    display_game()
    make_moves()
    end_game()
    play_again = ""
    while play_again != "y" and play_again != "n":
        play_again = input("Enter 'y' if you want to play again and 'n' if you do not ")
    if play_again.lower() == "y":
        play_game()
    else:
        pass
