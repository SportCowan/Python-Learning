#Python OOP HW assignment and challenge problem from udemy course

#HW Problem 1

#Fill in the Line class methods to accept coordinates as a pair of tuples and return the 
#slope and distance of the line.

class Line:
    
    def __init__(self,coor1,coor2):
        self.coor1 = coor1
        self.coor2 = coor2
    
    def distance(self):
        return ((self.coor2[0]-self.coor1[0])**2+(self.coor2[1]-self.coor1[1])**2)**0.5
    
    def slope(self):
        return (self.coor2[1]-self.coor1[1])/(self.coor2[0]-self.coor1[0])
    

#HW Problem 2

#Fill in the class

class Cylinder:
    
    def __init__(self,height=1,radius=1):
        self.height = height
        self.radius = radius
        
    def volume(self):
        return 3.14*self.height*self.radius**2
    
    def surface_area(self):
        return 2*3.14*self.radius**2+2*3.14*self.radius*self.height
    
    
#challenge problem

#For this challenge, create a bank account class that has two attributes:
#owner
#balance

#and two methods:
#deposit
#withdraw

#As an added requirement, withdrawals may not exceed the available balance.
#Instantiate your class, make several deposits and withdrawals, and test to make sure the 
#account can't be overdrawn.

class Account:
    
    def __init__(self,owner,balance):
        self.owner = owner
        self.balance = balance
        
    def deposit(self,cash):
        self.balance+=cash
        print("Deposit Accepted")
    
    def withdraw(self,money):
        if money > self.balance:
            print("Funds Unavailable!")
        else:
            self.balance-=money
            print("Withdrawal Accepted")
    
    def __str__(self):
        return f"Account Owner: {self.owner} \nAccount Balance: {self.balance}"
